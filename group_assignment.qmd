---
title: "Group Assignment"
author: "Group 24"
format:
  html:
    embed-resources: true
editor: visual
---

# PCA tidyverse style

Load libraries

```{r setup, include=TRUE, message=FALSE, warning=FALSE}
# Load the libraries
library(tidyverse)
library(dplyr)
library(ggplot2)
library(broom)
library(ggrepel)
library(purrr)

```

Load data

```{r}
raw_dir <- "data/_raw/"
data_file <- "gravier.RData"
data_loc <- "https://github.com/ramhiser/datamicroarray/raw/master/data/"

if( !dir.exists(raw_dir) ){
  dir.create(path = raw_dir)
}
if( !file.exists(str_c(raw_dir, data_file)) ){
  download.file(
    url = str_c(data_loc, data_file),
    destfile = str_c(raw_dir, data_file))
}
load(file = str_c(raw_dir, data_file))
```

Data Wrangeling

```{r}
gravier <- gravier |>
  bind_cols() |>
  as_tibble() |> 
  mutate(y = case_when(y == "poor" ~ 1,
                       y == "good" ~ 0)) |> 
  relocate(early_metastasis = y)

```

```{r}
gravier

```

Plot average expressions

```{r}
gravier |>
  select(-early_metastasis) |>
  summarise(across(everything(), mean, na.rm = TRUE)) |>
  pivot_longer(cols = everything(),
               names_to = "gene",
               values_to = "average_expression") |> 
  arrange(-average_expression) |>
  ggplot(aes(x = reorder(gene, average_expression), 
             y = average_expression)) + 
  geom_col() +
  labs(
    title = "Distribution of Average log2 Expression of Genes",
    x = "Genes",
    y = "Average log2 Expression"
  ) +
  theme_minimal()+
  theme(axis.text.x = element_blank())
```

## PCA analysis (S232996)

```{r}
pca_fit <- gravier |> 
  select(where(is.numeric)) |>  # retain only numeric columns
  prcomp(scale = TRUE) # do PCA on scaled data
```

```{r}
pca_fit |> 
  augment(gravier) |>  # add original dataset back in
  ggplot(aes(.fittedPC1, .fittedPC2, color = as.factor(early_metastasis))) + 
  geom_point(size = 1.5) +
  scale_color_manual(values = c("1" = "#D55E00", "0" = "#0072B2"))+
  labs(color = "Early Metastasis")

```

```{r}
pca_fit |> 
  tidy(matrix = "rotation")
```

```{r}
pca_fit |> 
  tidy(matrix = "eigenvalues")

```

![]()

```{r}
pca_fit |> 
  tidy(matrix = "eigenvalues") |> 
  ggplot(aes(PC, percent)) +
  geom_col(fill = "#56B4E9", alpha = 0.8) +
  scale_x_continuous(breaks = 1:9) +
  scale_y_continuous(
    labels = scales::percent_format(),
    expand = expansion(mult = c(0, 0.01))
  ) 
```

Here I just applied the code from the pca file we got

Next I tried to apply the many models approach just for fun

\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_

```{r}
gravier_clean_aug_long<-gravier |> 
  pivot_longer(cols = starts_with('g'),
               names_to = 'gene',
               values_drop_na = TRUE,
               values_to='log2_exp_level')

gravier_clean_aug_long
```

```{r}
#nes tht e data
gravier_clean_aug_long_nested<- gravier_clean_aug_long |> 
  group_by(gene) |> 
  nest() |> 
  ungroup()

gravier_clean_aug_long_nested
```

Fit the model (Many model approach)

```{r}
pca_model <- gravier_clean_aug_long_nested |> 
  group_by(gene) |> 
  mutate(pca_object = map(.x = data,
                   .f = ~prcomp(select(.x, where(is.numeric))), scale = TRUE)) |> 
    mutate(
    pca_object_tidy = map(.x = pca_object,
      .f = ~tidy(.x, conf.int = TRUE, conf.level = 0.95)),
    augmented_data = map(.x = pca_object,
      .f = ~augment(.x))
  ) |> 
  ungroup()

pca_model
```

```{r evl = FALSE}
gravier_model$pca_object[[2]]
```

```{r}
pca_model<-pca_model |> 
  unnest(augmented_data)
pca_model
```

TEST123
